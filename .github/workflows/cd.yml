name: Image push to registry docker
on:
  workflow_run:
    workflows: [CI]
    types:
      - completed
jobs:
  on-success:
    name: build and send to hub docker
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: Checkout
        uses: actions/Checkout@v3
      
      - name: Login in docker hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: fabiojssf/desafiodevops
      
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
  on-failure:
    name: Open issue.
    if: ${{ github.event.workflow_run.conclusion == 'failure' }}
    runs-on: ubuntu-latest
    steps:
      - name: Create Issue
        if: failure() && github.event_name == 'pull_request'
        run: |
          curl --request POST \
          https://api.github.com/repos/${{ github.repository }}/issues \
          --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
          --header 'content-type: application/json' \
          --data '{ "title": "Issue aberta de forma automatica para o commit: ${{ github.sha }}", "body": "Essa issue foi criada automaticamente pelo Github Action Worflow **${{ github.workflow }}**. \n\n O commit hash foi: _${{ github.sha }}_", "assignees": ["${{ github.event.pull_request.user.login }}"]}'